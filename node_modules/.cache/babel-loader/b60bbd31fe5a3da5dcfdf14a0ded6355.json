{"ast":null,"code":"const MaticPoSClient = require(\"@maticnetwork/maticjs\").MaticPOSClient;\n\nconst Matic = require(\"@maticnetwork/maticjs\");\n\nconst config = require(\"./config.json\"); // posClientGeneral facilitates the operations like approve, deposit, exit\n\n\nexport const posClientParent = (maticProvider, account, inj_provider) => {\n  const maticPoSClient = new MaticPoSClient({\n    network: config.NETWORK,\n    version: config.VERSION,\n    maticProvider: maticProvider,\n    parentProvider: inj_provider,\n    parentDefaultOptions: {\n      from: account\n    },\n    maticDefaultOptions: {\n      from: account\n    }\n  });\n  return maticPoSClient;\n}; // getMaticPlasmaClient facilitates the burning of tokens on the matic chain\n\nexport const getMaticPlasmaParent = async (maticProvider, account, inj_provider) => {\n  const _network = config.NETWORK;\n  const _version = config.VERSION; // const network = new Network(_network, _version);\n\n  const matic = new Matic({\n    network: _network,\n    version: _version,\n    parentProvider: inj_provider,\n    maticProvider: maticProvider,\n    parentDefaultOptions: {\n      from: account\n    },\n    maticDefaultOptions: {\n      from: account\n    }\n  });\n  await matic.initialize();\n  return matic;\n};","map":{"version":3,"sources":["/Users/piyushmaheshwari/Downloads/pos-plasma-tutorial-exit-pos-plasma/src/utils/Matic.js"],"names":["MaticPoSClient","require","MaticPOSClient","Matic","config","posClientParent","maticProvider","account","inj_provider","maticPoSClient","network","NETWORK","version","VERSION","parentProvider","parentDefaultOptions","from","maticDefaultOptions","getMaticPlasmaParent","_network","_version","matic","initialize"],"mappings":"AAAA,MAAMA,cAAc,GAAGC,OAAO,CAAC,uBAAD,CAAP,CAAiCC,cAAxD;;AACA,MAAMC,KAAK,GAAGF,OAAO,CAAC,uBAAD,CAArB;;AACA,MAAMG,MAAM,GAAGH,OAAO,CAAC,eAAD,CAAtB,C,CAEA;;;AACA,OAAO,MAAMI,eAAe,GAAG,CAACC,aAAD,EAAgBC,OAAhB,EAAyBC,YAAzB,KAA0C;AACvE,QAAMC,cAAc,GAAG,IAAIT,cAAJ,CAAmB;AACxCU,IAAAA,OAAO,EAAEN,MAAM,CAACO,OADwB;AAExCC,IAAAA,OAAO,EAAER,MAAM,CAACS,OAFwB;AAGxCP,IAAAA,aAAa,EAAEA,aAHyB;AAIxCQ,IAAAA,cAAc,EAAEN,YAJwB;AAKxCO,IAAAA,oBAAoB,EAAE;AAAEC,MAAAA,IAAI,EAAET;AAAR,KALkB;AAMxCU,IAAAA,mBAAmB,EAAE;AAAED,MAAAA,IAAI,EAAET;AAAR;AANmB,GAAnB,CAAvB;AAQA,SAAOE,cAAP;AACD,CAVM,C,CAYP;;AACA,OAAO,MAAMS,oBAAoB,GAAG,OAAOZ,aAAP,EAAsBC,OAAtB,EAA+BC,YAA/B,KAAgD;AAClF,QAAMW,QAAQ,GAAGf,MAAM,CAACO,OAAxB;AACA,QAAMS,QAAQ,GAAGhB,MAAM,CAACS,OAAxB,CAFkF,CAGlF;;AACA,QAAMQ,KAAK,GAAG,IAAIlB,KAAJ,CAAU;AACtBO,IAAAA,OAAO,EAAES,QADa;AAEtBP,IAAAA,OAAO,EAAEQ,QAFa;AAGtBN,IAAAA,cAAc,EAAEN,YAHM;AAItBF,IAAAA,aAAa,EAAEA,aAJO;AAKtBS,IAAAA,oBAAoB,EAAE;AAAEC,MAAAA,IAAI,EAAET;AAAR,KALA;AAMtBU,IAAAA,mBAAmB,EAAE;AAAED,MAAAA,IAAI,EAAET;AAAR;AANC,GAAV,CAAd;AAQA,QAAMc,KAAK,CAACC,UAAN,EAAN;AACA,SAAOD,KAAP;AACD,CAdM","sourcesContent":["const MaticPoSClient = require(\"@maticnetwork/maticjs\").MaticPOSClient;\nconst Matic = require(\"@maticnetwork/maticjs\");\nconst config = require(\"./config.json\");\n\n// posClientGeneral facilitates the operations like approve, deposit, exit\nexport const posClientParent = (maticProvider, account, inj_provider) => {\n  const maticPoSClient = new MaticPoSClient({\n    network: config.NETWORK,\n    version: config.VERSION,\n    maticProvider: maticProvider,\n    parentProvider: inj_provider,\n    parentDefaultOptions: { from: account },\n    maticDefaultOptions: { from: account },\n  });\n  return maticPoSClient;\n};\n\n// getMaticPlasmaClient facilitates the burning of tokens on the matic chain\nexport const getMaticPlasmaParent = async (maticProvider, account, inj_provider) => {\n  const _network = config.NETWORK;\n  const _version = config.VERSION;\n  // const network = new Network(_network, _version);\n  const matic = new Matic({\n    network: _network,\n    version: _version,\n    parentProvider: inj_provider,\n    maticProvider: maticProvider,\n    parentDefaultOptions: { from: account },\n    maticDefaultOptions: { from: account },\n  });\n  await matic.initialize();\n  return matic;\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var util = require('util'),\n    AbstractLevelDOWN = require('abstract-leveldown').AbstractLevelDOWN,\n    DeferredIterator = require('./deferred-iterator');\n\nfunction DeferredLevelDOWN(location) {\n  AbstractLevelDOWN.call(this, typeof location == 'string' ? location : ''); // optional location, who cares?\n\n  this._db = undefined;\n  this._operations = [];\n  this._iterators = [];\n}\n\nutil.inherits(DeferredLevelDOWN, AbstractLevelDOWN); // called by LevelUP when we have a real DB to take its place\n\nDeferredLevelDOWN.prototype.setDb = function (db) {\n  this._db = db;\n\n  this._operations.forEach(function (op) {\n    db[op.method].apply(db, op.args);\n  });\n\n  this._iterators.forEach(function (it) {\n    it.setDb(db);\n  });\n};\n\nDeferredLevelDOWN.prototype._open = function (options, callback) {\n  return process.nextTick(callback);\n}; // queue a new deferred operation\n\n\nDeferredLevelDOWN.prototype._operation = function (method, args) {\n  if (this._db) return this._db[method].apply(this._db, args);\n\n  this._operations.push({\n    method: method,\n    args: args\n  });\n}; // deferrables\n\n\n'put get del batch approximateSize'.split(' ').forEach(function (m) {\n  DeferredLevelDOWN.prototype['_' + m] = function () {\n    this._operation(m, arguments);\n  };\n});\n\nDeferredLevelDOWN.prototype._isBuffer = function (obj) {\n  return Buffer.isBuffer(obj);\n};\n\nDeferredLevelDOWN.prototype._iterator = function (options) {\n  if (this._db) return this._db.iterator.apply(this._db, arguments);\n  var it = new DeferredIterator(options);\n\n  this._iterators.push(it);\n\n  return it;\n};\n\nmodule.exports = DeferredLevelDOWN;\nmodule.exports.DeferredIterator = DeferredIterator;","map":{"version":3,"sources":["/Users/piyushmaheshwari/Downloads/pos-plasma-tutorial-exit-pos-plasma/node_modules/deferred-leveldown/deferred-leveldown.js"],"names":["util","require","AbstractLevelDOWN","DeferredIterator","DeferredLevelDOWN","location","call","_db","undefined","_operations","_iterators","inherits","prototype","setDb","db","forEach","op","method","apply","args","it","_open","options","callback","process","nextTick","_operation","push","split","m","arguments","_isBuffer","obj","Buffer","isBuffer","_iterator","iterator","module","exports"],"mappings":"AAAA,IAAIA,IAAI,GAAgBC,OAAO,CAAC,MAAD,CAA/B;AAAA,IACIC,iBAAiB,GAAGD,OAAO,CAAC,oBAAD,CAAP,CAA8BC,iBADtD;AAAA,IAEIC,gBAAgB,GAAIF,OAAO,CAAC,qBAAD,CAF/B;;AAIA,SAASG,iBAAT,CAA4BC,QAA5B,EAAsC;AACpCH,EAAAA,iBAAiB,CAACI,IAAlB,CAAuB,IAAvB,EAA6B,OAAOD,QAAP,IAAmB,QAAnB,GAA8BA,QAA9B,GAAyC,EAAtE,EADoC,CACsC;;AAC1E,OAAKE,GAAL,GAAmBC,SAAnB;AACA,OAAKC,WAAL,GAAmB,EAAnB;AACA,OAAKC,UAAL,GAAmB,EAAnB;AACD;;AAEDV,IAAI,CAACW,QAAL,CAAcP,iBAAd,EAAiCF,iBAAjC,E,CAEA;;AACAE,iBAAiB,CAACQ,SAAlB,CAA4BC,KAA5B,GAAoC,UAAUC,EAAV,EAAc;AAChD,OAAKP,GAAL,GAAWO,EAAX;;AACA,OAAKL,WAAL,CAAiBM,OAAjB,CAAyB,UAAUC,EAAV,EAAc;AACrCF,IAAAA,EAAE,CAACE,EAAE,CAACC,MAAJ,CAAF,CAAcC,KAAd,CAAoBJ,EAApB,EAAwBE,EAAE,CAACG,IAA3B;AACD,GAFD;;AAGA,OAAKT,UAAL,CAAgBK,OAAhB,CAAwB,UAAUK,EAAV,EAAc;AACpCA,IAAAA,EAAE,CAACP,KAAH,CAASC,EAAT;AACD,GAFD;AAGD,CARD;;AAUAV,iBAAiB,CAACQ,SAAlB,CAA4BS,KAA5B,GAAoC,UAAUC,OAAV,EAAmBC,QAAnB,EAA6B;AAC/D,SAAOC,OAAO,CAACC,QAAR,CAAiBF,QAAjB,CAAP;AACD,CAFD,C,CAIA;;;AACAnB,iBAAiB,CAACQ,SAAlB,CAA4Bc,UAA5B,GAAyC,UAAUT,MAAV,EAAkBE,IAAlB,EAAwB;AAC/D,MAAI,KAAKZ,GAAT,EACE,OAAO,KAAKA,GAAL,CAASU,MAAT,EAAiBC,KAAjB,CAAuB,KAAKX,GAA5B,EAAiCY,IAAjC,CAAP;;AACF,OAAKV,WAAL,CAAiBkB,IAAjB,CAAsB;AAAEV,IAAAA,MAAM,EAAEA,MAAV;AAAkBE,IAAAA,IAAI,EAAEA;AAAxB,GAAtB;AACD,CAJD,C,CAMA;;;AACA,oCAAoCS,KAApC,CAA0C,GAA1C,EAA+Cb,OAA/C,CAAuD,UAAUc,CAAV,EAAa;AAClEzB,EAAAA,iBAAiB,CAACQ,SAAlB,CAA4B,MAAMiB,CAAlC,IAAuC,YAAY;AACjD,SAAKH,UAAL,CAAgBG,CAAhB,EAAmBC,SAAnB;AACD,GAFD;AAGD,CAJD;;AAMA1B,iBAAiB,CAACQ,SAAlB,CAA4BmB,SAA5B,GAAwC,UAAUC,GAAV,EAAe;AACrD,SAAOC,MAAM,CAACC,QAAP,CAAgBF,GAAhB,CAAP;AACD,CAFD;;AAIA5B,iBAAiB,CAACQ,SAAlB,CAA4BuB,SAA5B,GAAwC,UAAUb,OAAV,EAAmB;AACzD,MAAI,KAAKf,GAAT,EACE,OAAO,KAAKA,GAAL,CAAS6B,QAAT,CAAkBlB,KAAlB,CAAwB,KAAKX,GAA7B,EAAkCuB,SAAlC,CAAP;AACF,MAAIV,EAAE,GAAG,IAAIjB,gBAAJ,CAAqBmB,OAArB,CAAT;;AACA,OAAKZ,UAAL,CAAgBiB,IAAhB,CAAqBP,EAArB;;AACA,SAAOA,EAAP;AACD,CAND;;AAQAiB,MAAM,CAACC,OAAP,GAAkClC,iBAAlC;AACAiC,MAAM,CAACC,OAAP,CAAenC,gBAAf,GAAkCA,gBAAlC","sourcesContent":["var util              = require('util')\n  , AbstractLevelDOWN = require('abstract-leveldown').AbstractLevelDOWN\n  , DeferredIterator  = require('./deferred-iterator')\n\nfunction DeferredLevelDOWN (location) {\n  AbstractLevelDOWN.call(this, typeof location == 'string' ? location : '') // optional location, who cares?\n  this._db         = undefined\n  this._operations = []\n  this._iterators  = []\n}\n\nutil.inherits(DeferredLevelDOWN, AbstractLevelDOWN)\n\n// called by LevelUP when we have a real DB to take its place\nDeferredLevelDOWN.prototype.setDb = function (db) {\n  this._db = db\n  this._operations.forEach(function (op) {\n    db[op.method].apply(db, op.args)\n  })\n  this._iterators.forEach(function (it) {\n    it.setDb(db)\n  })\n}\n\nDeferredLevelDOWN.prototype._open = function (options, callback) {\n  return process.nextTick(callback)\n}\n\n// queue a new deferred operation\nDeferredLevelDOWN.prototype._operation = function (method, args) {\n  if (this._db)\n    return this._db[method].apply(this._db, args)\n  this._operations.push({ method: method, args: args })\n}\n\n// deferrables\n'put get del batch approximateSize'.split(' ').forEach(function (m) {\n  DeferredLevelDOWN.prototype['_' + m] = function () {\n    this._operation(m, arguments)\n  }\n})\n\nDeferredLevelDOWN.prototype._isBuffer = function (obj) {\n  return Buffer.isBuffer(obj)\n}\n\nDeferredLevelDOWN.prototype._iterator = function (options) {\n  if (this._db)\n    return this._db.iterator.apply(this._db, arguments)\n  var it = new DeferredIterator(options)\n  this._iterators.push(it)\n  return it\n}\n\nmodule.exports                  = DeferredLevelDOWN\nmodule.exports.DeferredIterator = DeferredIterator\n"]},"metadata":{},"sourceType":"script"}
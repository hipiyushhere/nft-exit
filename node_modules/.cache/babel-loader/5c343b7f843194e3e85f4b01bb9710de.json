{"ast":null,"code":"var _jsxFileName = \"/Users/piyushmaheshwari/Downloads/pos-plasma-tutorial-exit-pos-plasma/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Alert from '@material-ui/lab/Alert';\nimport { CircularProgress, Typography, Switch } from \"@material-ui/core\";\nimport Web3 from \"web3\";\nimport MetaNetwork from \"@maticnetwork/meta/network\";\nimport WalletConnectProvider from \"@maticnetwork/walletconnect-provider\";\nimport Navbar from \"./components/Navbar\";\nimport Instructions from \"./components/Instructions\";\nimport config from \"./utils/config.json\";\nimport { useWeb3Context } from './contexts/Web3Context';\nimport { posClientParent, getMaticPlasmaParent } from \"./utils/Matic\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    account,\n    providerChainId,\n    inj_provider,\n    connectWeb3\n  } = useWeb3Context();\n  const [loading, setLoading] = useState(false);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [isPlasma, setIsPlasma] = useState(false);\n  const [maticProvider, setMaticProvider] = useState();\n  const [hash, setHash] = useState('');\n  const [error, setError] = useState('');\n  const [errLink, setErrLink] = useState(false);\n  const [posErrLink, setPosErrLink] = useState(false);\n  useEffect(() => {\n    if (!account) {\n      connectWeb3();\n    }\n  }, [account, connectWeb3]);\n  useEffect(() => {\n    const setProvider = async () => {\n      setLoading(true); // matic provider set\n\n      const maticProvider = await new WalletConnectProvider({\n        host: config.MATIC_RPC,\n        callbacks: {\n          onConnect: console.log(\"matic connected\"),\n          onDisconnect: console.log(\"matic disconnected!\")\n        }\n      });\n      setMaticProvider(maticProvider);\n      setLoading(false);\n    };\n\n    setProvider();\n  }, []);\n\n  const getProof = async type => {\n    try {\n      const base_url = 'https://apis.matic.network/api/v1/matic/exit-payload';\n      const posSignature = '0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef';\n      const plasmaSignature = '0xebff2602b3f468259e1e99f613fed6691f3a6526effe6ef3e768ba7ae7a36c4f';\n      const url = `${base_url}/${inputValue}?eventSignature=${type === 'pos' ? posSignature : plasmaSignature}`;\n      let {\n        data\n      } = await axios.get(url);\n      console.log(data);\n\n      if (data.result) {\n        return data.result;\n      }\n\n      return null;\n    } catch (error) {\n      console.error(\"Proof not found.\");\n      return null;\n    }\n  }; // POS ERC20 exit function\n\n\n  const exitERC20 = async () => {\n    setError('');\n    setHash('');\n    setPosErrLink(false);\n\n    try {\n      setLoading(true); // api call bridge api\n\n      const {\n        data\n      } = await axios.post('https://bridge-api-node.matic.today/api/v2/withdraw/', {\n        withdrawTxObjectArray: [{\n          \"txHash\": inputValue,\n          \"isPoS\": true\n        }]\n      }); // console.log(data);\n\n      const status = data.withdrawTxStatus[Object.keys(data.withdrawTxStatus)[0]];\n\n      if (status.code === -10) {\n        setLoading(false);\n        console.log(\"EXIT ALREADY PROCESSED\");\n        setError('Withdraw process completed already.');\n      } else {\n        const proof = await getProof('pos');\n\n        if (proof) {\n          const network = new MetaNetwork('mainnet', 'v1');\n          const parentProvider = inj_provider;\n          const parentWeb3 = new Web3(parentProvider);\n          const rootChainManagerAbi = network.abi('RootChainManager', 'pos');\n          const rootChainManagerAddress = network.Main.POSContracts.RootChainManagerProxy;\n          const rootChainManagerContract = new parentWeb3.eth.Contract(rootChainManagerAbi, rootChainManagerAddress);\n          await rootChainManagerContract.methods.exit(proof).send({\n            from: account\n          }).then(res => {\n            console.log(\"Exit transaction hash: \", res);\n            setHash(res.transactionHash);\n            setLoading(false);\n          });\n        } else {\n          const maticPoSClient = posClientParent(maticProvider, account, inj_provider);\n          await maticPoSClient.exitERC20(inputValue, {\n            from: account\n          }).then(res => {\n            console.log(\"Exit transaction hash: \", res);\n            setHash(res.transactionHash);\n            setLoading(false);\n          });\n        }\n      }\n    } catch (e) {\n      setLoading(false);\n      if (e.message.substr(0, 28) === `Returned values aren't valid`) setError('Seems like you are not on Ethereum Network, change the network and refresh the page.');else if (e.message === `Cannot read property 'blockNumber' of null`) setError('Incorrect burn transaction hash');else if (e.message === `txHash not provided`) setError('Please input the transaction hash.');else if (e.message.substr(0, 32) === `Returned error: invalid argument`) setError('Incorrect burn transaction hash');else if (e.message.substr(0, 49) === `Burn transaction has not been checkpointed as yet`) setError('Burn transaction has not been checkpointed yet. Please wait for 1-3hrs.');else if (e.message.substr(0, 53) === `Invalid parameters: must provide an Ethereum address.`) setError('Please refresh the page and try again.');else if (e.message === `Log not found in receipt`) setPosErrLink(true);else if (e.message === 'Invalid response') setError('Please try again after some time.');else setError(e.message.substr(0, 80));\n      console.error(e);\n    }\n  }; // Plasma MATIC withdraw function\n\n\n  const withdrawPlasmaERC20 = async () => {\n    setError('');\n    setHash('');\n    setErrLink(false);\n\n    try {\n      setLoading(true); // check bridge api\n\n      const {\n        data\n      } = await axios.post('https://bridge-api-node.matic.today/api/v2/withdraw/', {\n        withdrawTxObjectArray: [{\n          \"txHash\": inputValue,\n          \"isPoS\": false\n        }]\n      }); // console.log(data);\n\n      const status = data.withdrawTxStatus[Object.keys(data.withdrawTxStatus)[0]];\n\n      if (status.code === -10) {\n        setLoading(false);\n        console.log(\"EXIT ALREADY PROCESSED\");\n        setError('Withdraw process completed already.');\n      } else {\n        const proof = await getProof('plasma');\n\n        if (proof) {\n          const network = new MetaNetwork('mainnet', 'v1');\n          const parentProvider = inj_provider;\n          const parentWeb3 = new Web3(parentProvider);\n          const erc20PredicateAbi = network.abi('ERC20PredicateBurnOnly');\n          const erc20PredicateAddress = network.Main.Contracts.ERC20Predicate;\n          const erc20PredicateContract = new parentWeb3.eth.Contract(erc20PredicateAbi, erc20PredicateAddress);\n          await erc20PredicateContract.methods.startExitWithBurntTokens(proof).send({\n            from: account\n          }).on('transactionHash', async () => {\n            let res = await axios.post(\"https://airdrop-api.matic.network/plasma-withdraw-notification\", {\n              \"address\": account,\n              \"burnTransactionHash\": inputValue,\n              \"toSendInToken\": 0,\n              \"symbol\": \"PLASMA_WITHDRAW\"\n            });\n            console.log(res.data);\n          }).then(res => {\n            console.log(\"Exit transaction hash: \", res);\n            setHash(res.transactionHash);\n            setLoading(false);\n          });\n        } else {\n          const maticPlasmaClient = await getMaticPlasmaParent(maticProvider, account, inj_provider);\n          await maticPlasmaClient.withdraw(inputValue, {\n            from: account,\n            onTransactionHash: async () => {\n              let res = await axios.post(\"https://airdrop-api.matic.network/plasma-withdraw-notification\", {\n                \"address\": account,\n                \"burnTransactionHash\": inputValue,\n                \"toSendInToken\": 0,\n                \"symbol\": \"PLASMA_WITHDRAW\"\n              });\n              console.log(res.data);\n            }\n          }).then(res => {\n            console.log(\"Exit transaction hash: \", res);\n            setHash(res.transactionHash);\n            setLoading(false);\n          });\n        }\n      }\n    } catch (e) {\n      setLoading(false);\n      if (e.message.substr(0, 28) === `Returned values aren't valid`) setError('Seems like you are not on Ethereum Network, change the network and refresh the page.');else if (e.message === `Cannot read property 'blockNumber' of null`) setError('Incorrect burn transaction hash');else if (e.message === `txHash not provided`) setError('Please input the transaction hash.');else if (e.message.substr(0, 32) === `Returned error: invalid argument`) setError('Incorrect burn transaction hash');else if (e.message.substr(0, 49) === `Burn transaction has not been checkpointed as yet`) setError('Burn transaction has not been checkpointed yet. Please wait for 1-3hrs.');else if (e.message.substr(0, 53) === `Invalid parameters: must provide an Ethereum address.`) setError('Please refresh the page and try again.');else if (e.message === `Log not found in receipt`) setErrLink(true);else if (e.message === 'Invalid response') setError('Please try again after some time.');else setError(e.message.substr(0, 80));\n      console.error(e);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.inro,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h1\",\n        className: classes.title,\n        children: \"Polygon Withdraw\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h1\",\n        className: classes.text,\n        children: [\"Paste the transaction hash of your burn transaction on Polygon and click on Complete Withdraw.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 105\n        }, this), \"If you cannot find your burn transaction, please find it \", /*#__PURE__*/_jsxDEV(\"a\", {\n          target: \"_blank\",\n          style: {\n            textDecoration: 'underline'\n          },\n          href: `https://polygonscan.com/address/${account}#tokentxns`,\n          rel: \"noreferrer\",\n          children: \"here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 68\n        }, this), \". Also, read the instructions given below carefully.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.body,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.input,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"0xaa30bf8f73dfdaa...\",\n          name: \"inputValue\",\n          value: inputValue,\n          onChange: e => setInputValue(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          maxWidth: 150,\n          margin: '0 auto 20px auto',\n          alignContent: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"POS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          checked: isPlasma,\n          onChange: e => setIsPlasma(e.target.checked),\n          color: \"primary\",\n          inputProps: {\n            'aria-label': 'primary checkbox'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Plasma\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.btn,\n        onClick: isPlasma ? withdrawPlasmaERC20 : exitERC20,\n        disabled: providerChainId === config.ETHEREUM_CHAINID && !loading && account ? false : true,\n        children: [loading && /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 24,\n          style: {\n            margin: 'auto',\n            marginRight: 15\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 23\n        }, this), loading ? 'checking...' : 'Complete Withdraw']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), hash && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"success\",\n        children: [\"Exit transaction hash: \", /*#__PURE__*/_jsxDEV(\"a\", {\n          target: \"blank\",\n          href: `https://etherscan.io/tx/${hash}`,\n          rel: \"noreferrer\",\n          children: hash\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 11\n      }, this), posErrLink && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        style: {\n          textAlign: 'left'\n        },\n        children: [\"If you are trying to withdraw MATIC then switch to Plasma using the toggle. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 89\n        }, this), \"If Still facing problem then please reach out to \", /*#__PURE__*/_jsxDEV(\"a\", {\n          target: \"blank\",\n          style: {\n            color: '#0d6efd',\n            textDecoration: 'underline'\n          },\n          href: \"https://wallet-support.matic.network/portal/en/home\",\n          rel: \"noreferrer\",\n          children: \"support team\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 62\n        }, this), \" \", ' ', \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 11\n      }, this), errLink && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        children: [\"Please reach out to \", /*#__PURE__*/_jsxDEV(\"a\", {\n          target: \"blank\",\n          style: {\n            color: '#0d6efd',\n            textDecoration: 'underline'\n          },\n          href: \"https://wallet-support.matic.network/portal/en/home\",\n          rel: \"noreferrer\",\n          children: \"support team\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 33\n        }, this), \" \", ' ', \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 11\n      }, this), providerChainId && providerChainId !== config.ETHEREUM_CHAINID && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        children: \"Seems like you are not on Ethereum network, change the network and refresh the page.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Instructions, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"TZqTSOF8+X7dMa0GgHsc0oCPZcQ=\", false, function () {\n  return [useStyles, useWeb3Context];\n});\n\n_c = App;\nexport default App;\nconst useStyles = makeStyles(() => ({\n  btn: {\n    height: \"44px\",\n    lineHeight: \"44px\",\n    padding: \"0 20px\",\n    borderRadius: \"4px\",\n    display: \"inline-flex\",\n    textTransform: \"capitalize\",\n    fontWeight: \"600\",\n    fontSize: 16,\n    position: \"relative\",\n    backgroundColor: \"#061024\",\n    color: \"white\",\n    cursor: 'pointer',\n    marginBottom: 20,\n    \"&:disabled\": {\n      backgroundColor: \"#bdc3c7\",\n      borderColor: \"#bdc3c7\",\n      color: \"white\",\n      border: 'none',\n      cursor: 'default'\n    }\n  },\n  inro: {\n    height: 200,\n    backgroundColor: '#854CE6',\n    textAlign: 'center',\n    padding: '35px 0',\n    \"@media (max-width:700px)\": {\n      height: 250\n    }\n  },\n  title: {\n    marginBottom: 20,\n    fontSize: 36,\n    fontWeight: 800,\n    color: '#FFFFFF',\n    \"@media (max-width:700px)\": {\n      fontSize: 25\n    }\n  },\n  text: {\n    fontSize: 16,\n    fontWeight: 400,\n    color: \"#FFFFFF\"\n  },\n  body: {\n    position: 'relative',\n    textAlign: 'center',\n    maxWidth: 852,\n    margin: 'auto',\n    \"@media (max-width:599px)\": {\n      padding: '0 10px'\n    }\n  },\n  input: {\n    maxWidth: 500,\n    position: 'relative',\n    top: -30,\n    left: '50%',\n    transform: 'translateX(-50%)',\n    backgroundColor: \"white\",\n    border: '1px solid #DCDFE6',\n    padding: '18px 15px',\n    boxSizing: 'border-box',\n    boxShadow: '0px 1px 4px rgba(0, 0, 0, 0.08)',\n    borderRadius: 8,\n    \"& input\": {\n      background: \"transparent\",\n      fontSize: \"16px\",\n      fontWeight: \"600\",\n      color: \"black\",\n      display: \"block\",\n      border: 0,\n      outline: \"none\",\n      padding: 0,\n      width: '100%'\n    }\n  }\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/piyushmaheshwari/Downloads/pos-plasma-tutorial-exit-pos-plasma/src/App.js"],"names":["React","useEffect","useState","axios","makeStyles","Alert","CircularProgress","Typography","Switch","Web3","MetaNetwork","WalletConnectProvider","Navbar","Instructions","config","useWeb3Context","posClientParent","getMaticPlasmaParent","App","classes","useStyles","account","providerChainId","inj_provider","connectWeb3","loading","setLoading","inputValue","setInputValue","isPlasma","setIsPlasma","maticProvider","setMaticProvider","hash","setHash","error","setError","errLink","setErrLink","posErrLink","setPosErrLink","setProvider","host","MATIC_RPC","callbacks","onConnect","console","log","onDisconnect","getProof","type","base_url","posSignature","plasmaSignature","url","data","get","result","exitERC20","post","withdrawTxObjectArray","status","withdrawTxStatus","Object","keys","code","proof","network","parentProvider","parentWeb3","rootChainManagerAbi","abi","rootChainManagerAddress","Main","POSContracts","RootChainManagerProxy","rootChainManagerContract","eth","Contract","methods","exit","send","from","then","res","transactionHash","maticPoSClient","e","message","substr","withdrawPlasmaERC20","erc20PredicateAbi","erc20PredicateAddress","Contracts","ERC20Predicate","erc20PredicateContract","startExitWithBurntTokens","on","maticPlasmaClient","withdraw","onTransactionHash","inro","title","text","textDecoration","body","input","target","value","display","maxWidth","margin","alignContent","checked","btn","ETHEREUM_CHAINID","marginRight","textAlign","color","height","lineHeight","padding","borderRadius","textTransform","fontWeight","fontSize","position","backgroundColor","cursor","marginBottom","borderColor","border","top","left","transform","boxSizing","boxShadow","background","outline","width"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Alert from '@material-ui/lab/Alert';\nimport { CircularProgress, Typography, Switch } from \"@material-ui/core\";\n\nimport Web3 from \"web3\";\nimport MetaNetwork from \"@maticnetwork/meta/network\";\nimport WalletConnectProvider from \"@maticnetwork/walletconnect-provider\";\n\nimport Navbar from \"./components/Navbar\";\nimport Instructions from \"./components/Instructions\";\nimport config from \"./utils/config.json\";\nimport { useWeb3Context } from './contexts/Web3Context';\nimport { posClientParent, getMaticPlasmaParent } from \"./utils/Matic\";\n\n\nconst App = () => {\n  const classes = useStyles();\n  const { account, providerChainId, inj_provider, connectWeb3 } = useWeb3Context();\n\n  const [loading, setLoading] = useState(false);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [isPlasma, setIsPlasma] = useState(false);\n  const [maticProvider, setMaticProvider] = useState();\n  const [hash, setHash] = useState('');\n  const [error, setError] = useState('');\n  const [errLink, setErrLink] = useState(false);\n  const [posErrLink, setPosErrLink] = useState(false);\n\n  useEffect(() => {\n    if (!account) {\n      connectWeb3();\n    }\n  }, [account, connectWeb3])\n\n  useEffect(() => {\n    const setProvider = async () => {\n      setLoading(true);\n      // matic provider set\n      const maticProvider = await new WalletConnectProvider({\n        host: config.MATIC_RPC,\n        callbacks: {\n          onConnect: console.log(\"matic connected\"),\n          onDisconnect: console.log(\"matic disconnected!\"),\n        },\n      });\n      setMaticProvider(maticProvider);\n      setLoading(false);\n    }\n    setProvider();\n  }, [])\n\n  const getProof = async (type) => {\n    try {\n      const base_url = 'https://apis.matic.network/api/v1/matic/exit-payload';\n      const posSignature = '0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef';\n      const plasmaSignature = '0xebff2602b3f468259e1e99f613fed6691f3a6526effe6ef3e768ba7ae7a36c4f';\n      const url = `${base_url}/${inputValue}?eventSignature=${type === 'pos' ? posSignature : plasmaSignature}`\n      let { data } = await axios.get(url);\n      console.log(data);\n      if (data.result) {\n        return data.result;\n      }\n      return null;\n    } catch (error) {\n      console.error(\"Proof not found.\");\n      return null;\n    }\n  }\n\n\n  // POS ERC20 exit function\n  const exitERC20 = async () => {\n    setError('');\n    setHash('');\n    setPosErrLink(false);\n    try {\n      setLoading(true);\n      // api call bridge api\n      const { data } = await axios.post('https://bridge-api-node.matic.today/api/v2/withdraw/', {\n        withdrawTxObjectArray: [{\n          \"txHash\": inputValue,\n          \"isPoS\": true\n        }],\n      });\n      // console.log(data);\n      const status = data.withdrawTxStatus[Object.keys(data.withdrawTxStatus)[0]];\n      if (status.code === -10) {\n        setLoading(false);\n        console.log(\"EXIT ALREADY PROCESSED\");\n        setError('Withdraw process completed already.');\n      } else {\n        const proof = await getProof('pos');\n        if (proof) {\n          const network = new MetaNetwork('mainnet', 'v1');\n          const parentProvider = inj_provider;\n          const parentWeb3 = new Web3(parentProvider)\n          const rootChainManagerAbi = network.abi('RootChainManager', 'pos',)\n          const rootChainManagerAddress = network.Main.POSContracts.RootChainManagerProxy\n          const rootChainManagerContract = new parentWeb3.eth.Contract(rootChainManagerAbi, rootChainManagerAddress)\n          await rootChainManagerContract.methods.exit(proof).send({\n            from: account,\n          }).then((res) => {\n            console.log(\"Exit transaction hash: \", res);\n            setHash(res.transactionHash);\n            setLoading(false);\n          });\n        } else {\n          const maticPoSClient = posClientParent(maticProvider, account, inj_provider);\n          await maticPoSClient.exitERC20(inputValue, {\n            from: account,\n          }).then((res) => {\n            console.log(\"Exit transaction hash: \", res);\n            setHash(res.transactionHash);\n            setLoading(false);\n          });\n        }\n      }\n    } catch (e) {\n      setLoading(false);\n      if (e.message.substr(0, 28) === `Returned values aren't valid`)\n        setError('Seems like you are not on Ethereum Network, change the network and refresh the page.')\n      else if (e.message === `Cannot read property 'blockNumber' of null`)\n        setError('Incorrect burn transaction hash')\n      else if (e.message === `txHash not provided`)\n        setError('Please input the transaction hash.')\n      else if (e.message.substr(0, 32) === `Returned error: invalid argument`)\n        setError('Incorrect burn transaction hash')\n      else if (e.message.substr(0, 49) === `Burn transaction has not been checkpointed as yet`)\n        setError('Burn transaction has not been checkpointed yet. Please wait for 1-3hrs.')\n      else if (e.message.substr(0, 53) === `Invalid parameters: must provide an Ethereum address.`)\n        setError('Please refresh the page and try again.')\n      else if (e.message === `Log not found in receipt`)\n        setPosErrLink(true);\n      else if (e.message === 'Invalid response')\n        setError('Please try again after some time.');\n      else setError(e.message.substr(0, 80));\n      console.error(e);\n    }\n  };\n\n  // Plasma MATIC withdraw function\n  const withdrawPlasmaERC20 = async () => {\n    setError('');\n    setHash('');\n    setErrLink(false);\n    try {\n      setLoading(true);\n      // check bridge api\n      const { data } = await axios.post('https://bridge-api-node.matic.today/api/v2/withdraw/', {\n        withdrawTxObjectArray: [{\n          \"txHash\": inputValue,\n          \"isPoS\": false\n        }],\n      });\n      // console.log(data);\n      const status = data.withdrawTxStatus[Object.keys(data.withdrawTxStatus)[0]];\n      if (status.code === -10) {\n        setLoading(false);\n        console.log(\"EXIT ALREADY PROCESSED\");\n        setError('Withdraw process completed already.');\n      } else {\n        const proof = await getProof('plasma');\n        if (proof) {\n          const network = new MetaNetwork('mainnet', 'v1');\n          const parentProvider = inj_provider;\n          const parentWeb3 = new Web3(parentProvider)\n          const erc20PredicateAbi = network.abi('ERC20PredicateBurnOnly')\n          const erc20PredicateAddress = network.Main.Contracts.ERC20Predicate\n          const erc20PredicateContract = new parentWeb3.eth.Contract(erc20PredicateAbi, erc20PredicateAddress)\n          await erc20PredicateContract.methods.startExitWithBurntTokens(proof).send({\n            from: account,\n          })\n            .on('transactionHash', async () => {\n              let res = await axios.post(\"https://airdrop-api.matic.network/plasma-withdraw-notification\", {\n                \"address\": account,\n                \"burnTransactionHash\": inputValue,\n                \"toSendInToken\": 0,\n                \"symbol\": \"PLASMA_WITHDRAW\"\n              });\n              console.log(res.data);\n            })\n            .then((res) => {\n              console.log(\"Exit transaction hash: \", res);\n              setHash(res.transactionHash);\n              setLoading(false);\n            });\n        } else {\n          const maticPlasmaClient = await getMaticPlasmaParent(maticProvider, account, inj_provider);\n          await maticPlasmaClient.withdraw(inputValue, {\n            from: account,\n            onTransactionHash: async () => {\n              let res = await axios.post(\"https://airdrop-api.matic.network/plasma-withdraw-notification\", {\n                \"address\": account,\n                \"burnTransactionHash\": inputValue,\n                \"toSendInToken\": 0,\n                \"symbol\": \"PLASMA_WITHDRAW\"\n              });\n              console.log(res.data);\n            }\n          }).then((res) => {\n            console.log(\"Exit transaction hash: \", res);\n            setHash(res.transactionHash);\n            setLoading(false);\n          });\n        }\n      }\n    } catch (e) {\n      setLoading(false);\n      if (e.message.substr(0, 28) === `Returned values aren't valid`)\n        setError('Seems like you are not on Ethereum Network, change the network and refresh the page.')\n      else if (e.message === `Cannot read property 'blockNumber' of null`)\n        setError('Incorrect burn transaction hash')\n      else if (e.message === `txHash not provided`)\n        setError('Please input the transaction hash.')\n      else if (e.message.substr(0, 32) === `Returned error: invalid argument`)\n        setError('Incorrect burn transaction hash')\n      else if (e.message.substr(0, 49) === `Burn transaction has not been checkpointed as yet`)\n        setError('Burn transaction has not been checkpointed yet. Please wait for 1-3hrs.')\n      else if (e.message.substr(0, 53) === `Invalid parameters: must provide an Ethereum address.`)\n        setError('Please refresh the page and try again.')\n      else if (e.message === `Log not found in receipt`)\n        setErrLink(true);\n      else if (e.message === 'Invalid response')\n        setError('Please try again after some time.');\n      else setError(e.message.substr(0, 80));\n      console.error(e);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {/* Navbar */}\n      <Navbar />\n\n      {/* Top Intro section */}\n      <div className={classes.inro}>\n        <Typography variant=\"h1\" className={classes.title}>\n          Polygon Withdraw\n        </Typography>\n\n        <Typography variant=\"h1\" className={classes.text}>\n          Paste the transaction hash of your burn transaction on Polygon and click on Complete Withdraw.<br />\n          If you cannot find your burn transaction, please find it <a target=\"_blank\" style={{ textDecoration: 'underline' }}\n            href={`https://polygonscan.com/address/${account}#tokentxns`} rel=\"noreferrer\">here</a>. Also, read the instructions given below carefully.\n        </Typography>\n      </div>\n\n      {/* Input section */}\n      <section className={classes.body}>\n        <div className={classes.input}>\n          <input type=\"text\" placeholder=\"0xaa30bf8f73dfdaa...\" name=\"inputValue\"\n            value={inputValue} onChange={(e) => setInputValue(e.target.value)} required\n          />\n        </div>\n\n        <div style={{ display: 'flex', maxWidth: 150, margin: '0 auto 20px auto', alignContent: 'center' }}>\n          <p>POS</p>\n          <Switch\n            checked={isPlasma}\n            onChange={(e) => setIsPlasma(e.target.checked)}\n            color=\"primary\"\n            inputProps={{ 'aria-label': 'primary checkbox' }}\n          />\n          <p>Plasma</p>\n        </div>\n\n        <button className={classes.btn} onClick={isPlasma ? withdrawPlasmaERC20 : exitERC20}\n          disabled={providerChainId === config.ETHEREUM_CHAINID && !loading && account ? false : true}>\n          {loading && <CircularProgress size={24} style={{ margin: 'auto', marginRight: 15 }} />}\n          {loading ? 'checking...' : 'Complete Withdraw'}\n        </button>\n        {hash &&\n          <Alert severity=\"success\">\n            Exit transaction hash: <a target=\"blank\" href={`https://etherscan.io/tx/${hash}`} rel=\"noreferrer\">{hash}</a>\n          </Alert>\n        }\n        {error &&\n          <Alert severity=\"error\">\n            {error}\n          </Alert>\n        }\n        {posErrLink &&\n          <Alert severity=\"error\" style={{ textAlign: 'left' }}>\n            If you are trying to withdraw MATIC then switch to Plasma using the toggle. <br />\n            If Still facing problem then please reach out to <a target=\"blank\" style={{ color: '#0d6efd', textDecoration: 'underline' }}\n              href=\"https://wallet-support.matic.network/portal/en/home\" rel=\"noreferrer\">support team</a> {' '}.\n          </Alert>\n        }\n        {errLink &&\n          <Alert severity=\"error\">\n            Please reach out to <a target=\"blank\" style={{ color: '#0d6efd', textDecoration: 'underline' }}\n              href=\"https://wallet-support.matic.network/portal/en/home\" rel=\"noreferrer\">support team</a> {' '}.\n          </Alert>\n        }\n        {providerChainId && providerChainId !== config.ETHEREUM_CHAINID &&\n          <Alert severity=\"error\">\n            Seems like you are not on Ethereum network, change the network and refresh the page.\n          </Alert>\n        }\n      </section>\n\n      {/* Instructions */}\n      <Instructions />\n\n    </React.Fragment>\n  );\n};\n\nexport default App;\n\nconst useStyles = makeStyles(() => ({\n  btn: {\n    height: \"44px\",\n    lineHeight: \"44px\",\n    padding: \"0 20px\",\n    borderRadius: \"4px\",\n    display: \"inline-flex\",\n    textTransform: \"capitalize\",\n    fontWeight: \"600\",\n    fontSize: 16,\n    position: \"relative\",\n    backgroundColor: \"#061024\",\n    color: \"white\",\n    cursor: 'pointer',\n    marginBottom: 20,\n\n    \"&:disabled\": {\n      backgroundColor: \"#bdc3c7\",\n      borderColor: \"#bdc3c7\",\n      color: \"white\",\n      border: 'none',\n      cursor: 'default'\n    },\n  },\n  inro: {\n    height: 200,\n    backgroundColor: '#854CE6',\n    textAlign: 'center',\n    padding: '35px 0',\n    \"@media (max-width:700px)\": {\n      height: 250,\n    },\n  },\n  title: {\n    marginBottom: 20,\n    fontSize: 36,\n    fontWeight: 800,\n    color: '#FFFFFF',\n    \"@media (max-width:700px)\": {\n      fontSize: 25,\n    },\n  },\n  text: {\n    fontSize: 16,\n    fontWeight: 400,\n    color: \"#FFFFFF\",\n  },\n  body: {\n    position: 'relative',\n    textAlign: 'center',\n    maxWidth: 852,\n    margin: 'auto',\n    \"@media (max-width:599px)\": {\n      padding: '0 10px',\n    },\n  },\n  input: {\n    maxWidth: 500,\n    position: 'relative',\n    top: -30,\n    left: '50%',\n    transform: 'translateX(-50%)',\n    backgroundColor: \"white\",\n    border: '1px solid #DCDFE6',\n    padding: '18px 15px',\n    boxSizing: 'border-box',\n    boxShadow: '0px 1px 4px rgba(0, 0, 0, 0.08)',\n    borderRadius: 8,\n\n    \"& input\": {\n      background: \"transparent\",\n      fontSize: \"16px\",\n      fontWeight: \"600\",\n      color: \"black\",\n      display: \"block\",\n      border: 0,\n      outline: \"none\",\n      padding: 0,\n      width: '100%',\n    },\n  }\n}));\n\n"]},"metadata":{},"sourceType":"module"}
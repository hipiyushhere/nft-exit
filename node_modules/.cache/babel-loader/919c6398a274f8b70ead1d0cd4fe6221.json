{"ast":null,"code":"/* Copyright (c) 2013 LevelUP contributors\n * See list at <https://github.com/rvagg/node-levelup#contributing>\n * MIT +no-false-attribs License\n * <https://github.com/Level/level-ws/master/LICENSE>\n */\nvar Writable = require('stream').Writable || require('readable-stream').Writable,\n    inherits = require('util').inherits,\n    extend = require('xtend'),\n    defaultOptions = {\n  type: 'put',\n  keyEncoding: 'utf8',\n  valueEncoding: 'utf8'\n} // copied from LevelUP\n,\n    encodingNames = ['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le'] // copied from LevelUP\n,\n    encodingOpts = function () {\n  var eo = {};\n  encodingNames.forEach(function (e) {\n    eo[e] = {\n      valueEncoding: e\n    };\n  });\n  return eo;\n}(); // copied from LevelUP\n\n\nfunction getOptions(levelup, options) {\n  var s = typeof options == 'string'; // just an encoding\n\n  if (!s && options && options.encoding && !options.valueEncoding) options.valueEncoding = options.encoding;\n  return extend(levelup && levelup.options || {}, s ? encodingOpts[options] || encodingOpts[defaultOptions.valueEncoding] : options);\n}\n\nfunction WriteStream(options, db) {\n  if (!(this instanceof WriteStream)) return new WriteStream(options, db);\n  Writable.call(this, {\n    objectMode: true\n  });\n  this._options = extend(defaultOptions, getOptions(db, options));\n  this._db = db;\n  this._buffer = [];\n  this.writable = true;\n  this.readable = false;\n  var self = this;\n  this.on('finish', function f() {\n    if (self._buffer && self._buffer.length) {\n      return self._flush(f);\n    }\n\n    self.writable = false;\n    self.emit('close');\n  });\n}\n\ninherits(WriteStream, Writable);\n\nWriteStream.prototype._write = function write(d, enc, next) {\n  var self = this;\n  if (self._destroyed) return;\n  if (!self._db.isOpen()) return self._db.once('ready', function () {\n    write.call(self, d, enc, next);\n  });\n\n  if (self._options.maxBufferLength && self._buffer.length > self._options.maxBufferLength) {\n    self.once('_flush', next);\n  } else {\n    if (self._buffer.length === 0) process.nextTick(function () {\n      self._flush();\n    });\n\n    self._buffer.push(d);\n\n    next();\n  }\n};\n\nWriteStream.prototype._flush = function (f) {\n  var self = this,\n      buffer = self._buffer;\n  if (self._destroyed || !buffer) return;\n\n  if (!self._db.isOpen()) {\n    return self._db.on('ready', function () {\n      self._flush(f);\n    });\n  }\n\n  self._buffer = [];\n\n  self._db.batch(buffer.map(function (d) {\n    return {\n      type: d.type || self._options.type,\n      key: d.key,\n      value: d.value,\n      keyEncoding: d.keyEncoding || self._options.keyEncoding,\n      valueEncoding: d.valueEncoding || d.encoding || self._options.valueEncoding\n    };\n  }), cb);\n\n  function cb(err) {\n    if (err) {\n      self.writable = false;\n      self.emit('error', err);\n    } else {\n      if (f) f();\n      self.emit('_flush');\n    }\n  }\n};\n\nWriteStream.prototype.toString = function () {\n  return 'LevelUP.WriteStream';\n};\n\nWriteStream.prototype.destroy = function () {\n  if (this._destroyed) return;\n  this._buffer = null;\n  this._destroyed = true;\n  this.writable = false;\n  this.emit('close');\n};\n\nWriteStream.prototype.destroySoon = function () {\n  this.end();\n};\n\nmodule.exports = function (db) {\n  db.writeStream = db.createWriteStream = function (options) {\n    return new WriteStream(options, db);\n  };\n\n  return db;\n};\n\nmodule.exports.WriteStream = WriteStream;","map":{"version":3,"sources":["/Users/piyushmaheshwari/Downloads/pos-plasma-tutorial-exit-pos-plasma/node_modules/level-ws/level-ws.js"],"names":["Writable","require","inherits","extend","defaultOptions","type","keyEncoding","valueEncoding","encodingNames","encodingOpts","eo","forEach","e","getOptions","levelup","options","s","encoding","WriteStream","db","call","objectMode","_options","_db","_buffer","writable","readable","self","on","f","length","_flush","emit","prototype","_write","write","d","enc","next","_destroyed","isOpen","once","maxBufferLength","process","nextTick","push","buffer","batch","map","key","value","cb","err","toString","destroy","destroySoon","end","module","exports","writeStream","createWriteStream"],"mappings":"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","sourcesContent":["/* Copyright (c) 2013 LevelUP contributors\n * See list at <https://github.com/rvagg/node-levelup#contributing>\n * MIT +no-false-attribs License\n * <https://github.com/Level/level-ws/master/LICENSE>\n */\n\nvar Writable = require('stream').Writable || require('readable-stream').Writable\n  , inherits = require('util').inherits\n  , extend   = require('xtend')\n\n  , defaultOptions = {\n        type          : 'put'\n      , keyEncoding   : 'utf8'\n      , valueEncoding : 'utf8'\n    }\n\n    // copied from LevelUP\n  , encodingNames  = [\n        'hex'\n      , 'utf8'\n      , 'utf-8'\n      , 'ascii'\n      , 'binary'\n      , 'base64'\n      , 'ucs2'\n      , 'ucs-2'\n      , 'utf16le'\n      , 'utf-16le'\n    ]\n\n    // copied from LevelUP\n  , encodingOpts = (function () {\n      var eo = {}\n      encodingNames.forEach(function (e) {\n        eo[e] = { valueEncoding : e }\n      })\n      return eo\n    }())\n\n// copied from LevelUP\nfunction getOptions (levelup, options) {\n  var s = typeof options == 'string' // just an encoding\n  if (!s && options && options.encoding && !options.valueEncoding)\n    options.valueEncoding = options.encoding\n  return extend(\n      (levelup && levelup.options) || {}\n    , s ? encodingOpts[options] || encodingOpts[defaultOptions.valueEncoding]\n        : options\n  )\n}\n\nfunction WriteStream (options, db) {\n  if (!(this instanceof WriteStream))\n    return new WriteStream(options, db)\n\n  Writable.call(this, { objectMode: true })\n  this._options = extend(defaultOptions, getOptions(db, options))\n  this._db      = db\n  this._buffer = []\n  this.writable = true\n  this.readable = false\n\n  var self = this\n  this.on('finish', function f () {\n    if (self._buffer && self._buffer.length) {\n      return self._flush(f)\n    }\n    self.writable = false\n    self.emit('close')\n  })\n}\n\ninherits(WriteStream, Writable)\n\nWriteStream.prototype._write = function write (d, enc, next) {\n  var self = this\n  if (self._destroyed)\n    return\n  if (!self._db.isOpen())\n    return self._db.once('ready', function () {\n      write.call(self, d, enc, next)\n    })\n\n  if (self._options.maxBufferLength &&\n      self._buffer.length > self._options.maxBufferLength) {\n    self.once('_flush', next)\n  }\n  else {\n    if (self._buffer.length === 0)\n      process.nextTick(function () { self._flush() })\n    self._buffer.push(d)\n    next()\n  }\n}\n\nWriteStream.prototype._flush = function (f) {\n  var self = this\n    , buffer = self._buffer\n\n  if (self._destroyed || !buffer) return\n \n  if (!self._db.isOpen()) {\n    return self._db.on('ready', function () { self._flush(f) })\n  }\n  self._buffer = []\n\n  self._db.batch(buffer.map(function (d) {\n    return {\n        type          : d.type || self._options.type\n      , key           : d.key\n      , value         : d.value\n      , keyEncoding   : d.keyEncoding || self._options.keyEncoding\n      , valueEncoding : d.valueEncoding\n          || d.encoding\n          || self._options.valueEncoding\n    }\n  }), cb)\n\n  function cb (err) {\n    if (err) {\n      self.writable = false\n      self.emit('error', err)\n    }\n    else {\n      if (f) f()\n      self.emit('_flush')\n    }\n  }\n}\n\nWriteStream.prototype.toString = function () {\n  return 'LevelUP.WriteStream'\n}\n\nWriteStream.prototype.destroy = function () {\n  if (this._destroyed) return\n  this._buffer = null\n  this._destroyed = true\n  this.writable = false\n  this.emit('close')\n}\n\nWriteStream.prototype.destroySoon = function () {\n  this.end()\n}\n\nmodule.exports = function (db) {\n  db.writeStream = db.createWriteStream = function (options) {\n    return new WriteStream(options, db)\n  }\n  return db\n}\n\nmodule.exports.WriteStream = WriteStream"]},"metadata":{},"sourceType":"script"}